{"version":3,"sources":["components/Navbar.js","context/notes/noteContext.js","components/Noteitem.js","components/AddNote.js","components/Notes.js","components/Home.js","components/About.js","context/notes/NoteState.js","components/Alert.js","components/Login.js","components/Signup.js","App.js","index.js"],"names":["Navbar","location","useLocation","token","localStorage","getItem","className","to","type","id","pathname","onClick","removeItem","role","noteContext","createContext","Noteitem","props","deleteNote","useContext","note","updateNote","title","_id","showAlert","description","AddNote","addNote","useState","tag","setNote","onChange","e","target","name","value","htmlFor","disabled","length","preventDefault","Notes","history","useHistory","context","notes","getNotes","editNote","useEffect","push","ref","useRef","refClose","etitle","edescription","etag","currentNote","current","click","tabIndex","map","Home","About","NoteState","host","setNotes","a","fetch","method","headers","response","json","body","JSON","stringify","concat","newNotes","filter","parse","index","Provider","children","Alert","style","height","alert","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Login","email","password","credentials","setCredentials","handleSubmit","success","setItem","authtoken","onSubmit","Signup","required","minLength","App","setAlert","message","setTimeout","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ace42a10.chunk.js","sourcesContent":["import React from 'react'\nimport { Link, useLocation } from \"react-router-dom\";\n\n  \n\nconst Navbar = () => {\n    let location = useLocation();\n    //Handeling Logout \n    let token=localStorage.getItem('token');\n    const handleLogout=()=>{\n        localStorage.removeItem('token');\n    }\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n            <div className=\"container-fluid\">\n                <Link className=\"navbar-brand\" to=\"/\">iNotebook</Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            <Link className={`nav-link ${location.pathname===\"/\"? \"active\": \"\"}`} aria-current=\"page\" to=\"/\">Home</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className={`nav-link ${location.pathname===\"/about\"? \"active\": \"\"}`} to=\"/about\">About</Link>\n                        </li>\n\n                    </ul> \n                    <form className=\"d-flex\">\n                        {!token?<Link className=\"btn btn-outline-primary mx-2\" role=\"button\" to=\"/login\" type=\"submit\">Login</Link>\n                        :<button onClick={handleLogout} className=\"btn btn-outline-primary mx-2\">Logout</button>}\n                        <Link className=\"btn btn-outline-primary mx-2\" role=\"button\" to=\"/signup\" type=\"submit\">Signup  </Link>\n                    </form>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar\n","import { createContext } from \"react\";\n\nconst noteContext = createContext();\n\nexport default noteContext;","import React, {useContext} from 'react'\nimport noteContext from \"../context/notes/noteContext\"\n\n\nconst Noteitem = (props) => {\n    const context = useContext(noteContext);\n    const { deleteNote } = context;\n    const { note, updateNote } = props;\n    return (\n        <div className=\"col-md-3\">\n            <div className=\"card my-3\">\n                <div className=\"card-body\">\n                    <div className=\"d-flex align-items-center\">\n                        <h5 className=\"card-title\">{note.title}</h5>\n                        <i className=\"far fa-trash-alt mx-2\" onClick={()=>{\n                            deleteNote(note._id);\n                            props.showAlert(\"Deleted Successfully\",'success');\n                            }}></i>\n                        <i className=\"far fa-edit mx-2\" onClick={()=>{updateNote(note)}}></i>\n                    </div>\n                    <p className=\"card-text\">{note.description}</p>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Noteitem\n","import React, {useContext, useState} from 'react'\nimport noteContext from \"../context/notes/noteContext\"\n\nconst AddNote = (props) => {\n    const context = useContext(noteContext);\n    const {addNote} = context;\n\n    const [note, setNote] = useState({title: \"\", description: \"\", tag: \"\"})\n\n    const handleClick = (e)=>{\n        e.preventDefault();\n        addNote(note.title, note.description, note.tag);\n        setNote({title: \"\", description: \"\", tag: \"\"})\n        // Showing Alert\n        props.showAlert(\"Notes Added Successfully\",\"success\")\n    }\n\n    const onChange = (e)=>{\n        setNote({...note, [e.target.name]: e.target.value})\n    }\n    return (\n        <div className=\"container my-3\">\n            <h2>Add a Note</h2>\n            <form className=\"my-3\">\n                <div className=\"mb-3\">\n                    <label htmlFor=\"title\" className=\"form-label\">Title</label>\n                    <input type=\"text\" className=\"form-control\" id=\"title\" name=\"title\" aria-describedby=\"emailHelp\" value ={note.title} onChange={onChange} /> \n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"description\" className=\"form-label\">Description</label>\n                    <input type=\"text\" className=\"form-control\" id=\"description\" name=\"description\" value ={note.description} onChange={onChange} />\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"tag\" className=\"form-label\">Tag</label>\n                    <input type=\"text\" className=\"form-control\" id=\"tag\" name=\"tag\" value ={note.tag} onChange={onChange} />\n                </div>\n               \n                <button type=\"submit\" disabled={note.description.length<5} className=\"btn btn-primary\" onClick={handleClick}>Add Note</button>\n            </form>\n        </div>\n    )\n}\n \nexport default AddNote\n","import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport noteContext from \"../context/notes/noteContext\"\r\nimport Noteitem from './Noteitem';\r\nimport AddNote from './AddNote';\r\n\r\nconst Notes = (props) => {\r\n    let history=useHistory();\r\n    const context = useContext(noteContext);\r\n    const { notes, getNotes, editNote } = context;\r\n    useEffect(() => {\r\n        if(localStorage.getItem('token')){\r\n        getNotes()\r\n        }\r\n        else{\r\n            history.push('/login')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [])\r\n    const ref = useRef(null)\r\n    const refClose = useRef(null)\r\n    const [note, setNote] = useState({id: \"\", etitle: \"\", edescription: \"\", etag: \"\"})\r\n\r\n    const updateNote = (currentNote) => {\r\n        ref.current.click();\r\n        setNote({id: currentNote._id, etitle: currentNote.title, edescription: currentNote.description, etag:currentNote.tag})\r\n    }\r\n\r\n    const handleClick = (e)=>{ \r\n        editNote(note.id, note.etitle, note.edescription, note.etag)\r\n        refClose.current.click();\r\n        props.showAlert(\"Notes Edited Successfully\",\"success\")\r\n    }\r\n\r\n    const onChange = (e)=>{\r\n        setNote({...note, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AddNote showAlert={props.showAlert}/>\r\n            <button ref={ref} type=\"button\" className=\"btn btn-primary d-none\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\r\n                Launch demo modal\r\n            </button>\r\n            <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Edit Note</h5>\r\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form className=\"my-3\">\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"title\" className=\"form-label\">Title</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"etitle\" name=\"etitle\" value={note.etitle} aria-describedby=\"emailHelp\" onChange={onChange} />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"description\" className=\"form-label\">Description</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"edescription\" name=\"edescription\" value={note.edescription} onChange={onChange} />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"tag\" className=\"form-label\">Tag</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"etag\" name=\"etag\" value={note.etag} onChange={onChange} />\r\n                                </div>\r\n \r\n                            </form>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button ref={refClose} type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                            <button disabled={note.edescription.length<5} onClick={handleClick} type=\"button\" className=\"btn btn-primary\">Update Note</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row my-3\">\r\n                <h2>You Notes</h2>\r\n                {notes.length===0 && <h5 className ='container'>No Notes to display</h5>}\r\n                {notes.map((note) => {\r\n                    return <Noteitem key={note._id} showAlert={props.showAlert} updateNote={updateNote} note={note} />\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Notes\r\n","import Notes from './Notes';\n\nexport const Home = (props) => {\n\n    return (\n        <div> \n            <Notes showAlert={props.showAlert}/>\n        </div>\n    )\n}\n","import React from 'react'\n\nconst About = () => { \n    return (\n        <div>\n            This is About page\n        </div>\n    )\n}\n\nexport default About\n","import NoteContext from \"./noteContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst NoteState = (props) => {\r\n  const host = \"http://localhost:5000\"\r\n  const notesInitial = []\r\n  const [notes, setNotes] = useState(notesInitial)\r\n\r\n  // Get all Notes\r\n  const getNotes = async () => {\r\n    // API Call \r\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        \"auth-token\": localStorage.getItem('token')\r\n      }\r\n    });\r\n    const json = await response.json()\r\n    setNotes(json)\r\n  }\r\n\r\n  // Add a Note\r\n  const addNote = async (title, description, tag) => {\r\n    // TODO: API Call\r\n    // API Call \r\n    const response = await fetch(`${host}/api/notes/addnote`, {  \r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        \"auth-token\": localStorage.getItem('token')\r\n      },\r\n      body: JSON.stringify({ title, description, tag })\r\n    });\r\n\r\n    const json = await response.json();\r\n    setNotes(notes.concat(json))\r\n  }\r\n\r\n  // Delete a Note\r\n  const deleteNote = async (id) => {\r\n    // API Call\r\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        \"auth-token\": localStorage.getItem('token')\r\n      }\r\n    });\r\n    const json = response.json();\r\n    const newNotes = notes.filter((note) => { return note._id !== id })\r\n    setNotes(newNotes)\r\n  }\r\n\r\n  // Edit a Note\r\n  const editNote = async (id, title, description, tag) => {\r\n    // API Call \r\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        \"auth-token\": localStorage.getItem('token')\r\n      },\r\n      body: JSON.stringify({ title, description, tag })\r\n    });\r\n    const json = await response.json();\r\n  \r\n    let newNotes =JSON.parse(JSON.stringify(notes))\r\n    // Logic to edit in client\r\n    for (let index = 0; index < newNotes.length; index++) {\r\n      const element = newNotes[index];\r\n      if (element._id === id) {\r\n        newNotes[index].title = title;\r\n        newNotes[index].description = description;\r\n        newNotes[index].tag = tag; \r\n        break; \r\n      }\r\n    }  \r\n    setNotes(newNotes);\r\n  }\r\n\r\n  return (\r\n    <NoteContext.Provider value={{ notes, addNote, deleteNote, editNote, getNotes }}>\r\n      {props.children}\r\n    </NoteContext.Provider>\r\n  )\r\n\r\n}\r\nexport default NoteState;","import React from 'react'\n\nfunction Alert(props) {\n    const capitalize = (word)=>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n    return (\n        <div style={{height: '50px'}}>\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n           <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg} \n        </div>}\n        </div>\n    )\n}\n\nexport default Alert\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction Login(props) {\r\n    //Setting the value of email and password which is to be send to fetch api \r\n    const [credentials, setCredentials] = useState({ email: '', password: '' })\r\n    const onChange = (e) => {\r\n        setCredentials({ ...credentials, [e.target.name]: e.target.value })\r\n    }\r\n    // useHistory hook is used for redirecting to pages\r\n    let history = useHistory();\r\n\r\n    //Action to be done after clicking submit button\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let url = 'http://localhost:5000/api/auth/login';\r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            //Manually sending the email and password as a body \r\n            body: JSON.stringify({ email: credentials.email, password: credentials.password })\r\n        });\r\n        //Getting the response from backend\r\n        const json = await response.json()\r\n        if (json.success) {\r\n            localStorage.setItem('token', json.authtoken);\r\n            props.showAlert('Logged in Successfully', 'success');\r\n            history.push('/')\r\n        }\r\n        else {\r\n            props.showAlert('Invalid Credentials', 'danger')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>Login to Continue to iNotebook</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"email\" className=\"form-label\">Email address</label>\r\n                    <input type=\"email\" className=\"form-control\" value={credentials.email} onChange={onChange} id=\"email\" name=\"email\" aria-describedby=\"emailHelp\" />\r\n                    <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone else.</div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n                    <input type=\"password\" className=\"form-control\" value={credentials.password} onChange={onChange} name=\"password\" id=\"password\" />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React,{useState} from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction Signup(props) {\r\n    //Setting the value of name,email and password which is to be send to fetch api \r\n    const [credentials,setCredentials]=useState({name:'',email:'',password:''})\r\n    const onChange=(e)=>{\r\n        setCredentials({...credentials,[e.target.name]:e.target.value})\r\n    }\r\n    // useHistory hook is used for redirecting to pages\r\n    let history=useHistory();\r\n\r\n    //Action to be done after clicking submit button\r\n    const handleSubmit= async(e)=>{\r\n        e.preventDefault();\r\n        let url='http://localhost:5000/api/auth/createuser';\r\n        const response =await fetch(url,{\r\n            method:'POST',\r\n            headers:{\r\n                'Content-Type' :'application/json'\r\n            },\r\n            //Manually sending the name, email and password as a body \r\n            body:JSON.stringify({name:credentials.name,email:credentials.email, password:credentials.password})\r\n        });\r\n        //Getting the response from backend\r\n        const json =await response.json()\r\n        if(json.success){\r\n            localStorage.setItem('token',json.authtoken);\r\n            history.push('/');\r\n            \r\n        }\r\n        else{\r\n            props.showAlert('Invalid Credentials','danger');\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <h3 className=\"mb-3\">Create an Account</h3>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"row mb-3\">\r\n                    <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">Name</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"text\" required='true' minLength=\"3\" className=\"form-control\" name=\"name\" value={credentials.name} onChange={onChange} id=\"name\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mb-3\">\r\n                    <label htmlFor=\"email\" className=\"col-sm-2 col-form-label\">Email</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"email\" className=\"form-control\" name=\"email\" value={credentials.email} onChange={onChange} id=\"email\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mb-3\">\r\n                    <label htmlFor=\"password\" className=\"col-sm-2 col-form-label\">Password</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"password\" required='true' minLength=\"5\" className=\"form-control\" name=\"password\" value={credentials.password} onChange={onChange} id=\"password\" />\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Sign Up</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { useState } from 'react';\nimport Navbar from './components/Navbar';\nimport { Home } from './components/Home';\nimport About from './components/About';\nimport NoteState from './context/notes/NoteState';\nimport Alert  from './components/Alert';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\n\nfunction App() {\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n          setAlert(null);\n      }, 1500);\n  }\n\n  return (\n    <>\n      <NoteState>\n        <Router>\n          <Navbar />\n          <Alert alert={alert}/>\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Home showAlert={showAlert}/>\n              </Route>\n              <Route exact path=\"/login\">\n                <Login showAlert={showAlert}/>\n              </Route>\n              <Route exact path=\"/signup\">\n                <Signup showAlert={showAlert}/>\n              </Route>\n              <Route exact path=\"/about\">\n                <About />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      </NoteState>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n "],"sourceRoot":""}